// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: boostport/privacy/testing/invalid.proto

package testing

import (
	_ "github.com/Boostport/protoprivacy/internal/generated/boostport/privacy"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InvalidMultipleDataSubjectIDs struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Data1       *string                `protobuf:"bytes,2,opt,name=data1"`
	xxx_hidden_Data2       *string                `protobuf:"bytes,3,opt,name=data2"`
	xxx_hidden_Data3       *string                `protobuf:"bytes,4,opt,name=data3"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *InvalidMultipleDataSubjectIDs) Reset() {
	*x = InvalidMultipleDataSubjectIDs{}
	mi := &file_boostport_privacy_testing_invalid_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvalidMultipleDataSubjectIDs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidMultipleDataSubjectIDs) ProtoMessage() {}

func (x *InvalidMultipleDataSubjectIDs) ProtoReflect() protoreflect.Message {
	mi := &file_boostport_privacy_testing_invalid_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *InvalidMultipleDataSubjectIDs) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *InvalidMultipleDataSubjectIDs) GetData1() string {
	if x != nil {
		if x.xxx_hidden_Data1 != nil {
			return *x.xxx_hidden_Data1
		}
		return ""
	}
	return ""
}

func (x *InvalidMultipleDataSubjectIDs) GetData2() string {
	if x != nil {
		if x.xxx_hidden_Data2 != nil {
			return *x.xxx_hidden_Data2
		}
		return ""
	}
	return ""
}

func (x *InvalidMultipleDataSubjectIDs) GetData3() string {
	if x != nil {
		if x.xxx_hidden_Data3 != nil {
			return *x.xxx_hidden_Data3
		}
		return ""
	}
	return ""
}

func (x *InvalidMultipleDataSubjectIDs) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *InvalidMultipleDataSubjectIDs) SetData1(v string) {
	x.xxx_hidden_Data1 = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *InvalidMultipleDataSubjectIDs) SetData2(v string) {
	x.xxx_hidden_Data2 = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *InvalidMultipleDataSubjectIDs) SetData3(v string) {
	x.xxx_hidden_Data3 = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *InvalidMultipleDataSubjectIDs) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *InvalidMultipleDataSubjectIDs) HasData1() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *InvalidMultipleDataSubjectIDs) HasData2() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *InvalidMultipleDataSubjectIDs) HasData3() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *InvalidMultipleDataSubjectIDs) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *InvalidMultipleDataSubjectIDs) ClearData1() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Data1 = nil
}

func (x *InvalidMultipleDataSubjectIDs) ClearData2() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Data2 = nil
}

func (x *InvalidMultipleDataSubjectIDs) ClearData3() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Data3 = nil
}

type InvalidMultipleDataSubjectIDs_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id    *string
	Data1 *string
	Data2 *string
	Data3 *string
}

func (b0 InvalidMultipleDataSubjectIDs_builder) Build() *InvalidMultipleDataSubjectIDs {
	m0 := &InvalidMultipleDataSubjectIDs{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Id = b.Id
	}
	if b.Data1 != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Data1 = b.Data1
	}
	if b.Data2 != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Data2 = b.Data2
	}
	if b.Data3 != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Data3 = b.Data3
	}
	return m0
}

type InvalidMultipleDataSubjectIDsWithNesting struct {
	state                  protoimpl.MessageState                           `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                                          `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Data1       *string                                          `protobuf:"bytes,2,opt,name=data1"`
	xxx_hidden_Data2       *InvalidMultipleDataSubjectIDsWithNesting_Nested `protobuf:"bytes,3,opt,name=data2"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *InvalidMultipleDataSubjectIDsWithNesting) Reset() {
	*x = InvalidMultipleDataSubjectIDsWithNesting{}
	mi := &file_boostport_privacy_testing_invalid_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvalidMultipleDataSubjectIDsWithNesting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidMultipleDataSubjectIDsWithNesting) ProtoMessage() {}

func (x *InvalidMultipleDataSubjectIDsWithNesting) ProtoReflect() protoreflect.Message {
	mi := &file_boostport_privacy_testing_invalid_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *InvalidMultipleDataSubjectIDsWithNesting) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *InvalidMultipleDataSubjectIDsWithNesting) GetData1() string {
	if x != nil {
		if x.xxx_hidden_Data1 != nil {
			return *x.xxx_hidden_Data1
		}
		return ""
	}
	return ""
}

func (x *InvalidMultipleDataSubjectIDsWithNesting) GetData2() *InvalidMultipleDataSubjectIDsWithNesting_Nested {
	if x != nil {
		return x.xxx_hidden_Data2
	}
	return nil
}

func (x *InvalidMultipleDataSubjectIDsWithNesting) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *InvalidMultipleDataSubjectIDsWithNesting) SetData1(v string) {
	x.xxx_hidden_Data1 = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *InvalidMultipleDataSubjectIDsWithNesting) SetData2(v *InvalidMultipleDataSubjectIDsWithNesting_Nested) {
	x.xxx_hidden_Data2 = v
}

func (x *InvalidMultipleDataSubjectIDsWithNesting) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *InvalidMultipleDataSubjectIDsWithNesting) HasData1() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *InvalidMultipleDataSubjectIDsWithNesting) HasData2() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Data2 != nil
}

func (x *InvalidMultipleDataSubjectIDsWithNesting) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *InvalidMultipleDataSubjectIDsWithNesting) ClearData1() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Data1 = nil
}

func (x *InvalidMultipleDataSubjectIDsWithNesting) ClearData2() {
	x.xxx_hidden_Data2 = nil
}

type InvalidMultipleDataSubjectIDsWithNesting_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id    *string
	Data1 *string
	Data2 *InvalidMultipleDataSubjectIDsWithNesting_Nested
}

func (b0 InvalidMultipleDataSubjectIDsWithNesting_builder) Build() *InvalidMultipleDataSubjectIDsWithNesting {
	m0 := &InvalidMultipleDataSubjectIDsWithNesting{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Id = b.Id
	}
	if b.Data1 != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Data1 = b.Data1
	}
	x.xxx_hidden_Data2 = b.Data2
	return m0
}

type InvalidMultipleDataSubjectIDsWithDeepNesting struct {
	state                  protoimpl.MessageState                                `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                                               `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Data1       *string                                               `protobuf:"bytes,2,opt,name=data1"`
	xxx_hidden_Data2       *InvalidMultipleDataSubjectIDsWithDeepNesting_Nested1 `protobuf:"bytes,3,opt,name=data2"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *InvalidMultipleDataSubjectIDsWithDeepNesting) Reset() {
	*x = InvalidMultipleDataSubjectIDsWithDeepNesting{}
	mi := &file_boostport_privacy_testing_invalid_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvalidMultipleDataSubjectIDsWithDeepNesting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidMultipleDataSubjectIDsWithDeepNesting) ProtoMessage() {}

func (x *InvalidMultipleDataSubjectIDsWithDeepNesting) ProtoReflect() protoreflect.Message {
	mi := &file_boostport_privacy_testing_invalid_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *InvalidMultipleDataSubjectIDsWithDeepNesting) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *InvalidMultipleDataSubjectIDsWithDeepNesting) GetData1() string {
	if x != nil {
		if x.xxx_hidden_Data1 != nil {
			return *x.xxx_hidden_Data1
		}
		return ""
	}
	return ""
}

func (x *InvalidMultipleDataSubjectIDsWithDeepNesting) GetData2() *InvalidMultipleDataSubjectIDsWithDeepNesting_Nested1 {
	if x != nil {
		return x.xxx_hidden_Data2
	}
	return nil
}

func (x *InvalidMultipleDataSubjectIDsWithDeepNesting) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *InvalidMultipleDataSubjectIDsWithDeepNesting) SetData1(v string) {
	x.xxx_hidden_Data1 = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *InvalidMultipleDataSubjectIDsWithDeepNesting) SetData2(v *InvalidMultipleDataSubjectIDsWithDeepNesting_Nested1) {
	x.xxx_hidden_Data2 = v
}

func (x *InvalidMultipleDataSubjectIDsWithDeepNesting) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *InvalidMultipleDataSubjectIDsWithDeepNesting) HasData1() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *InvalidMultipleDataSubjectIDsWithDeepNesting) HasData2() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Data2 != nil
}

func (x *InvalidMultipleDataSubjectIDsWithDeepNesting) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *InvalidMultipleDataSubjectIDsWithDeepNesting) ClearData1() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Data1 = nil
}

func (x *InvalidMultipleDataSubjectIDsWithDeepNesting) ClearData2() {
	x.xxx_hidden_Data2 = nil
}

type InvalidMultipleDataSubjectIDsWithDeepNesting_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id    *string
	Data1 *string
	Data2 *InvalidMultipleDataSubjectIDsWithDeepNesting_Nested1
}

func (b0 InvalidMultipleDataSubjectIDsWithDeepNesting_builder) Build() *InvalidMultipleDataSubjectIDsWithDeepNesting {
	m0 := &InvalidMultipleDataSubjectIDsWithDeepNesting{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Id = b.Id
	}
	if b.Data1 != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Data1 = b.Data1
	}
	x.xxx_hidden_Data2 = b.Data2
	return m0
}

type InvalidMultipleDataSubjectIDsWithPrefix struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Data1       *string                `protobuf:"bytes,2,opt,name=data1"`
	xxx_hidden_Data2       *string                `protobuf:"bytes,3,opt,name=data2"`
	xxx_hidden_Data3       *string                `protobuf:"bytes,4,opt,name=data3"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *InvalidMultipleDataSubjectIDsWithPrefix) Reset() {
	*x = InvalidMultipleDataSubjectIDsWithPrefix{}
	mi := &file_boostport_privacy_testing_invalid_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvalidMultipleDataSubjectIDsWithPrefix) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidMultipleDataSubjectIDsWithPrefix) ProtoMessage() {}

func (x *InvalidMultipleDataSubjectIDsWithPrefix) ProtoReflect() protoreflect.Message {
	mi := &file_boostport_privacy_testing_invalid_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *InvalidMultipleDataSubjectIDsWithPrefix) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *InvalidMultipleDataSubjectIDsWithPrefix) GetData1() string {
	if x != nil {
		if x.xxx_hidden_Data1 != nil {
			return *x.xxx_hidden_Data1
		}
		return ""
	}
	return ""
}

func (x *InvalidMultipleDataSubjectIDsWithPrefix) GetData2() string {
	if x != nil {
		if x.xxx_hidden_Data2 != nil {
			return *x.xxx_hidden_Data2
		}
		return ""
	}
	return ""
}

func (x *InvalidMultipleDataSubjectIDsWithPrefix) GetData3() string {
	if x != nil {
		if x.xxx_hidden_Data3 != nil {
			return *x.xxx_hidden_Data3
		}
		return ""
	}
	return ""
}

func (x *InvalidMultipleDataSubjectIDsWithPrefix) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 4)
}

func (x *InvalidMultipleDataSubjectIDsWithPrefix) SetData1(v string) {
	x.xxx_hidden_Data1 = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 4)
}

func (x *InvalidMultipleDataSubjectIDsWithPrefix) SetData2(v string) {
	x.xxx_hidden_Data2 = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 4)
}

func (x *InvalidMultipleDataSubjectIDsWithPrefix) SetData3(v string) {
	x.xxx_hidden_Data3 = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 4)
}

func (x *InvalidMultipleDataSubjectIDsWithPrefix) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *InvalidMultipleDataSubjectIDsWithPrefix) HasData1() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *InvalidMultipleDataSubjectIDsWithPrefix) HasData2() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *InvalidMultipleDataSubjectIDsWithPrefix) HasData3() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *InvalidMultipleDataSubjectIDsWithPrefix) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *InvalidMultipleDataSubjectIDsWithPrefix) ClearData1() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Data1 = nil
}

func (x *InvalidMultipleDataSubjectIDsWithPrefix) ClearData2() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Data2 = nil
}

func (x *InvalidMultipleDataSubjectIDsWithPrefix) ClearData3() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Data3 = nil
}

type InvalidMultipleDataSubjectIDsWithPrefix_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id    *string
	Data1 *string
	Data2 *string
	Data3 *string
}

func (b0 InvalidMultipleDataSubjectIDsWithPrefix_builder) Build() *InvalidMultipleDataSubjectIDsWithPrefix {
	m0 := &InvalidMultipleDataSubjectIDsWithPrefix{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 4)
		x.xxx_hidden_Id = b.Id
	}
	if b.Data1 != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 4)
		x.xxx_hidden_Data1 = b.Data1
	}
	if b.Data2 != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 4)
		x.xxx_hidden_Data2 = b.Data2
	}
	if b.Data3 != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 4)
		x.xxx_hidden_Data3 = b.Data3
	}
	return m0
}

type InvalidDataSubjectIDRepeated struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          []string               `protobuf:"bytes,1,rep,name=id"`
	xxx_hidden_Data1       *string                `protobuf:"bytes,2,opt,name=data1"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *InvalidDataSubjectIDRepeated) Reset() {
	*x = InvalidDataSubjectIDRepeated{}
	mi := &file_boostport_privacy_testing_invalid_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvalidDataSubjectIDRepeated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidDataSubjectIDRepeated) ProtoMessage() {}

func (x *InvalidDataSubjectIDRepeated) ProtoReflect() protoreflect.Message {
	mi := &file_boostport_privacy_testing_invalid_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *InvalidDataSubjectIDRepeated) GetId() []string {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return nil
}

func (x *InvalidDataSubjectIDRepeated) GetData1() string {
	if x != nil {
		if x.xxx_hidden_Data1 != nil {
			return *x.xxx_hidden_Data1
		}
		return ""
	}
	return ""
}

func (x *InvalidDataSubjectIDRepeated) SetId(v []string) {
	x.xxx_hidden_Id = v
}

func (x *InvalidDataSubjectIDRepeated) SetData1(v string) {
	x.xxx_hidden_Data1 = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *InvalidDataSubjectIDRepeated) HasData1() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *InvalidDataSubjectIDRepeated) ClearData1() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Data1 = nil
}

type InvalidDataSubjectIDRepeated_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id    []string
	Data1 *string
}

func (b0 InvalidDataSubjectIDRepeated_builder) Build() *InvalidDataSubjectIDRepeated {
	m0 := &InvalidDataSubjectIDRepeated{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Id = b.Id
	if b.Data1 != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Data1 = b.Data1
	}
	return m0
}

type InvalidDataSubjectIDMap struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          map[string]string      `protobuf:"bytes,1,rep,name=id" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Data1       *string                `protobuf:"bytes,2,opt,name=data1"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *InvalidDataSubjectIDMap) Reset() {
	*x = InvalidDataSubjectIDMap{}
	mi := &file_boostport_privacy_testing_invalid_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvalidDataSubjectIDMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidDataSubjectIDMap) ProtoMessage() {}

func (x *InvalidDataSubjectIDMap) ProtoReflect() protoreflect.Message {
	mi := &file_boostport_privacy_testing_invalid_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *InvalidDataSubjectIDMap) GetId() map[string]string {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return nil
}

func (x *InvalidDataSubjectIDMap) GetData1() string {
	if x != nil {
		if x.xxx_hidden_Data1 != nil {
			return *x.xxx_hidden_Data1
		}
		return ""
	}
	return ""
}

func (x *InvalidDataSubjectIDMap) SetId(v map[string]string) {
	x.xxx_hidden_Id = v
}

func (x *InvalidDataSubjectIDMap) SetData1(v string) {
	x.xxx_hidden_Data1 = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *InvalidDataSubjectIDMap) HasData1() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *InvalidDataSubjectIDMap) ClearData1() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Data1 = nil
}

type InvalidDataSubjectIDMap_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id    map[string]string
	Data1 *string
}

func (b0 InvalidDataSubjectIDMap_builder) Build() *InvalidDataSubjectIDMap {
	m0 := &InvalidDataSubjectIDMap{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Id = b.Id
	if b.Data1 != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Data1 = b.Data1
	}
	return m0
}

type InvalidDataSubjectIDMessage struct {
	state                  protoimpl.MessageState              `protogen:"opaque.v1"`
	xxx_hidden_Id          *InvalidDataSubjectIDMessage_Nested `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Data1       *string                             `protobuf:"bytes,2,opt,name=data1"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *InvalidDataSubjectIDMessage) Reset() {
	*x = InvalidDataSubjectIDMessage{}
	mi := &file_boostport_privacy_testing_invalid_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvalidDataSubjectIDMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidDataSubjectIDMessage) ProtoMessage() {}

func (x *InvalidDataSubjectIDMessage) ProtoReflect() protoreflect.Message {
	mi := &file_boostport_privacy_testing_invalid_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *InvalidDataSubjectIDMessage) GetId() *InvalidDataSubjectIDMessage_Nested {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return nil
}

func (x *InvalidDataSubjectIDMessage) GetData1() string {
	if x != nil {
		if x.xxx_hidden_Data1 != nil {
			return *x.xxx_hidden_Data1
		}
		return ""
	}
	return ""
}

func (x *InvalidDataSubjectIDMessage) SetId(v *InvalidDataSubjectIDMessage_Nested) {
	x.xxx_hidden_Id = v
}

func (x *InvalidDataSubjectIDMessage) SetData1(v string) {
	x.xxx_hidden_Data1 = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *InvalidDataSubjectIDMessage) HasId() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Id != nil
}

func (x *InvalidDataSubjectIDMessage) HasData1() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *InvalidDataSubjectIDMessage) ClearId() {
	x.xxx_hidden_Id = nil
}

func (x *InvalidDataSubjectIDMessage) ClearData1() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Data1 = nil
}

type InvalidDataSubjectIDMessage_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id    *InvalidDataSubjectIDMessage_Nested
	Data1 *string
}

func (b0 InvalidDataSubjectIDMessage_builder) Build() *InvalidDataSubjectIDMessage {
	m0 := &InvalidDataSubjectIDMessage{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Id = b.Id
	if b.Data1 != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Data1 = b.Data1
	}
	return m0
}

type InvalidDataSubjectIDNestedInRepeated struct {
	state                  protoimpl.MessageState                          `protogen:"opaque.v1"`
	xxx_hidden_Id          *[]*InvalidDataSubjectIDNestedInRepeated_Nested `protobuf:"bytes,1,rep,name=id"`
	xxx_hidden_Data1       *string                                         `protobuf:"bytes,2,opt,name=data1"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *InvalidDataSubjectIDNestedInRepeated) Reset() {
	*x = InvalidDataSubjectIDNestedInRepeated{}
	mi := &file_boostport_privacy_testing_invalid_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvalidDataSubjectIDNestedInRepeated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidDataSubjectIDNestedInRepeated) ProtoMessage() {}

func (x *InvalidDataSubjectIDNestedInRepeated) ProtoReflect() protoreflect.Message {
	mi := &file_boostport_privacy_testing_invalid_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *InvalidDataSubjectIDNestedInRepeated) GetId() []*InvalidDataSubjectIDNestedInRepeated_Nested {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
	}
	return nil
}

func (x *InvalidDataSubjectIDNestedInRepeated) GetData1() string {
	if x != nil {
		if x.xxx_hidden_Data1 != nil {
			return *x.xxx_hidden_Data1
		}
		return ""
	}
	return ""
}

func (x *InvalidDataSubjectIDNestedInRepeated) SetId(v []*InvalidDataSubjectIDNestedInRepeated_Nested) {
	x.xxx_hidden_Id = &v
}

func (x *InvalidDataSubjectIDNestedInRepeated) SetData1(v string) {
	x.xxx_hidden_Data1 = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *InvalidDataSubjectIDNestedInRepeated) HasData1() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *InvalidDataSubjectIDNestedInRepeated) ClearData1() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Data1 = nil
}

type InvalidDataSubjectIDNestedInRepeated_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id    []*InvalidDataSubjectIDNestedInRepeated_Nested
	Data1 *string
}

func (b0 InvalidDataSubjectIDNestedInRepeated_builder) Build() *InvalidDataSubjectIDNestedInRepeated {
	m0 := &InvalidDataSubjectIDNestedInRepeated{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Id = &b.Id
	if b.Data1 != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Data1 = b.Data1
	}
	return m0
}

type InvalidDataSubjectIDNestedInMap struct {
	state                  protoimpl.MessageState                             `protogen:"opaque.v1"`
	xxx_hidden_Id          map[string]*InvalidDataSubjectIDNestedInMap_Nested `protobuf:"bytes,1,rep,name=id" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Data1       *string                                            `protobuf:"bytes,2,opt,name=data1"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *InvalidDataSubjectIDNestedInMap) Reset() {
	*x = InvalidDataSubjectIDNestedInMap{}
	mi := &file_boostport_privacy_testing_invalid_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvalidDataSubjectIDNestedInMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidDataSubjectIDNestedInMap) ProtoMessage() {}

func (x *InvalidDataSubjectIDNestedInMap) ProtoReflect() protoreflect.Message {
	mi := &file_boostport_privacy_testing_invalid_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *InvalidDataSubjectIDNestedInMap) GetId() map[string]*InvalidDataSubjectIDNestedInMap_Nested {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return nil
}

func (x *InvalidDataSubjectIDNestedInMap) GetData1() string {
	if x != nil {
		if x.xxx_hidden_Data1 != nil {
			return *x.xxx_hidden_Data1
		}
		return ""
	}
	return ""
}

func (x *InvalidDataSubjectIDNestedInMap) SetId(v map[string]*InvalidDataSubjectIDNestedInMap_Nested) {
	x.xxx_hidden_Id = v
}

func (x *InvalidDataSubjectIDNestedInMap) SetData1(v string) {
	x.xxx_hidden_Data1 = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *InvalidDataSubjectIDNestedInMap) HasData1() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *InvalidDataSubjectIDNestedInMap) ClearData1() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Data1 = nil
}

type InvalidDataSubjectIDNestedInMap_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id    map[string]*InvalidDataSubjectIDNestedInMap_Nested
	Data1 *string
}

func (b0 InvalidDataSubjectIDNestedInMap_builder) Build() *InvalidDataSubjectIDNestedInMap {
	m0 := &InvalidDataSubjectIDNestedInMap{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Id = b.Id
	if b.Data1 != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Data1 = b.Data1
	}
	return m0
}

type InvalidExternalDataSubjectID struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Data1       *string                `protobuf:"bytes,2,opt,name=data1"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *InvalidExternalDataSubjectID) Reset() {
	*x = InvalidExternalDataSubjectID{}
	mi := &file_boostport_privacy_testing_invalid_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvalidExternalDataSubjectID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidExternalDataSubjectID) ProtoMessage() {}

func (x *InvalidExternalDataSubjectID) ProtoReflect() protoreflect.Message {
	mi := &file_boostport_privacy_testing_invalid_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *InvalidExternalDataSubjectID) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *InvalidExternalDataSubjectID) GetData1() string {
	if x != nil {
		if x.xxx_hidden_Data1 != nil {
			return *x.xxx_hidden_Data1
		}
		return ""
	}
	return ""
}

func (x *InvalidExternalDataSubjectID) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *InvalidExternalDataSubjectID) SetData1(v string) {
	x.xxx_hidden_Data1 = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *InvalidExternalDataSubjectID) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *InvalidExternalDataSubjectID) HasData1() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *InvalidExternalDataSubjectID) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *InvalidExternalDataSubjectID) ClearData1() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Data1 = nil
}

type InvalidExternalDataSubjectID_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id    *string
	Data1 *string
}

func (b0 InvalidExternalDataSubjectID_builder) Build() *InvalidExternalDataSubjectID {
	m0 := &InvalidExternalDataSubjectID{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Id = b.Id
	}
	if b.Data1 != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Data1 = b.Data1
	}
	return m0
}

type InvalidDataSubjectIDInExternalNestedInRepeated struct {
	state                  protoimpl.MessageState                                    `protogen:"opaque.v1"`
	xxx_hidden_Id          *[]*InvalidDataSubjectIDInExternalNestedInRepeated_Nested `protobuf:"bytes,1,rep,name=id"`
	xxx_hidden_Data1       *string                                                   `protobuf:"bytes,2,opt,name=data1"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *InvalidDataSubjectIDInExternalNestedInRepeated) Reset() {
	*x = InvalidDataSubjectIDInExternalNestedInRepeated{}
	mi := &file_boostport_privacy_testing_invalid_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvalidDataSubjectIDInExternalNestedInRepeated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidDataSubjectIDInExternalNestedInRepeated) ProtoMessage() {}

func (x *InvalidDataSubjectIDInExternalNestedInRepeated) ProtoReflect() protoreflect.Message {
	mi := &file_boostport_privacy_testing_invalid_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *InvalidDataSubjectIDInExternalNestedInRepeated) GetId() []*InvalidDataSubjectIDInExternalNestedInRepeated_Nested {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
	}
	return nil
}

func (x *InvalidDataSubjectIDInExternalNestedInRepeated) GetData1() string {
	if x != nil {
		if x.xxx_hidden_Data1 != nil {
			return *x.xxx_hidden_Data1
		}
		return ""
	}
	return ""
}

func (x *InvalidDataSubjectIDInExternalNestedInRepeated) SetId(v []*InvalidDataSubjectIDInExternalNestedInRepeated_Nested) {
	x.xxx_hidden_Id = &v
}

func (x *InvalidDataSubjectIDInExternalNestedInRepeated) SetData1(v string) {
	x.xxx_hidden_Data1 = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *InvalidDataSubjectIDInExternalNestedInRepeated) HasData1() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *InvalidDataSubjectIDInExternalNestedInRepeated) ClearData1() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Data1 = nil
}

type InvalidDataSubjectIDInExternalNestedInRepeated_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id    []*InvalidDataSubjectIDInExternalNestedInRepeated_Nested
	Data1 *string
}

func (b0 InvalidDataSubjectIDInExternalNestedInRepeated_builder) Build() *InvalidDataSubjectIDInExternalNestedInRepeated {
	m0 := &InvalidDataSubjectIDInExternalNestedInRepeated{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Id = &b.Id
	if b.Data1 != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Data1 = b.Data1
	}
	return m0
}

type InvalidDataSubjectIDInExternalNestedInMap struct {
	state                  protoimpl.MessageState                                       `protogen:"opaque.v1"`
	xxx_hidden_Id          map[string]*InvalidDataSubjectIDInExternalNestedInMap_Nested `protobuf:"bytes,1,rep,name=id" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Data1       *string                                                      `protobuf:"bytes,2,opt,name=data1"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *InvalidDataSubjectIDInExternalNestedInMap) Reset() {
	*x = InvalidDataSubjectIDInExternalNestedInMap{}
	mi := &file_boostport_privacy_testing_invalid_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvalidDataSubjectIDInExternalNestedInMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidDataSubjectIDInExternalNestedInMap) ProtoMessage() {}

func (x *InvalidDataSubjectIDInExternalNestedInMap) ProtoReflect() protoreflect.Message {
	mi := &file_boostport_privacy_testing_invalid_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *InvalidDataSubjectIDInExternalNestedInMap) GetId() map[string]*InvalidDataSubjectIDInExternalNestedInMap_Nested {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return nil
}

func (x *InvalidDataSubjectIDInExternalNestedInMap) GetData1() string {
	if x != nil {
		if x.xxx_hidden_Data1 != nil {
			return *x.xxx_hidden_Data1
		}
		return ""
	}
	return ""
}

func (x *InvalidDataSubjectIDInExternalNestedInMap) SetId(v map[string]*InvalidDataSubjectIDInExternalNestedInMap_Nested) {
	x.xxx_hidden_Id = v
}

func (x *InvalidDataSubjectIDInExternalNestedInMap) SetData1(v string) {
	x.xxx_hidden_Data1 = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *InvalidDataSubjectIDInExternalNestedInMap) HasData1() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *InvalidDataSubjectIDInExternalNestedInMap) ClearData1() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Data1 = nil
}

type InvalidDataSubjectIDInExternalNestedInMap_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id    map[string]*InvalidDataSubjectIDInExternalNestedInMap_Nested
	Data1 *string
}

func (b0 InvalidDataSubjectIDInExternalNestedInMap_builder) Build() *InvalidDataSubjectIDInExternalNestedInMap {
	m0 := &InvalidDataSubjectIDInExternalNestedInMap{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Id = b.Id
	if b.Data1 != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Data1 = b.Data1
	}
	return m0
}

type InvalidNoPersonalDataField struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Data1       *string                `protobuf:"bytes,2,opt,name=data1"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *InvalidNoPersonalDataField) Reset() {
	*x = InvalidNoPersonalDataField{}
	mi := &file_boostport_privacy_testing_invalid_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvalidNoPersonalDataField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidNoPersonalDataField) ProtoMessage() {}

func (x *InvalidNoPersonalDataField) ProtoReflect() protoreflect.Message {
	mi := &file_boostport_privacy_testing_invalid_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *InvalidNoPersonalDataField) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *InvalidNoPersonalDataField) GetData1() string {
	if x != nil {
		if x.xxx_hidden_Data1 != nil {
			return *x.xxx_hidden_Data1
		}
		return ""
	}
	return ""
}

func (x *InvalidNoPersonalDataField) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *InvalidNoPersonalDataField) SetData1(v string) {
	x.xxx_hidden_Data1 = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *InvalidNoPersonalDataField) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *InvalidNoPersonalDataField) HasData1() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *InvalidNoPersonalDataField) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *InvalidNoPersonalDataField) ClearData1() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Data1 = nil
}

type InvalidNoPersonalDataField_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id    *string
	Data1 *string
}

func (b0 InvalidNoPersonalDataField_builder) Build() *InvalidNoPersonalDataField {
	m0 := &InvalidNoPersonalDataField{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Id = b.Id
	}
	if b.Data1 != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Data1 = b.Data1
	}
	return m0
}

type InvalidFallbackTypes struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Data1       bool                   `protobuf:"varint,2,opt,name=data1"`
	xxx_hidden_Data2       int32                  `protobuf:"varint,3,opt,name=data2"`
	xxx_hidden_Data3       int32                  `protobuf:"zigzag32,4,opt,name=data3"`
	xxx_hidden_Data4       uint32                 `protobuf:"varint,5,opt,name=data4"`
	xxx_hidden_Data5       int64                  `protobuf:"varint,6,opt,name=data5"`
	xxx_hidden_Data6       int64                  `protobuf:"zigzag64,7,opt,name=data6"`
	xxx_hidden_Data7       uint64                 `protobuf:"varint,8,opt,name=data7"`
	xxx_hidden_Data8       int32                  `protobuf:"fixed32,9,opt,name=data8"`
	xxx_hidden_Data9       uint32                 `protobuf:"fixed32,10,opt,name=data9"`
	xxx_hidden_Data10      float32                `protobuf:"fixed32,11,opt,name=data10"`
	xxx_hidden_Data11      int64                  `protobuf:"fixed64,12,opt,name=data11"`
	xxx_hidden_Data12      uint64                 `protobuf:"fixed64,13,opt,name=data12"`
	xxx_hidden_Data13      float64                `protobuf:"fixed64,14,opt,name=data13"`
	xxx_hidden_Data14      *string                `protobuf:"bytes,15,opt,name=data14"`
	xxx_hidden_Data15      []byte                 `protobuf:"bytes,16,opt,name=data15"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *InvalidFallbackTypes) Reset() {
	*x = InvalidFallbackTypes{}
	mi := &file_boostport_privacy_testing_invalid_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvalidFallbackTypes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidFallbackTypes) ProtoMessage() {}

func (x *InvalidFallbackTypes) ProtoReflect() protoreflect.Message {
	mi := &file_boostport_privacy_testing_invalid_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *InvalidFallbackTypes) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *InvalidFallbackTypes) GetData1() bool {
	if x != nil {
		return x.xxx_hidden_Data1
	}
	return false
}

func (x *InvalidFallbackTypes) GetData2() int32 {
	if x != nil {
		return x.xxx_hidden_Data2
	}
	return 0
}

func (x *InvalidFallbackTypes) GetData3() int32 {
	if x != nil {
		return x.xxx_hidden_Data3
	}
	return 0
}

func (x *InvalidFallbackTypes) GetData4() uint32 {
	if x != nil {
		return x.xxx_hidden_Data4
	}
	return 0
}

func (x *InvalidFallbackTypes) GetData5() int64 {
	if x != nil {
		return x.xxx_hidden_Data5
	}
	return 0
}

func (x *InvalidFallbackTypes) GetData6() int64 {
	if x != nil {
		return x.xxx_hidden_Data6
	}
	return 0
}

func (x *InvalidFallbackTypes) GetData7() uint64 {
	if x != nil {
		return x.xxx_hidden_Data7
	}
	return 0
}

func (x *InvalidFallbackTypes) GetData8() int32 {
	if x != nil {
		return x.xxx_hidden_Data8
	}
	return 0
}

func (x *InvalidFallbackTypes) GetData9() uint32 {
	if x != nil {
		return x.xxx_hidden_Data9
	}
	return 0
}

func (x *InvalidFallbackTypes) GetData10() float32 {
	if x != nil {
		return x.xxx_hidden_Data10
	}
	return 0
}

func (x *InvalidFallbackTypes) GetData11() int64 {
	if x != nil {
		return x.xxx_hidden_Data11
	}
	return 0
}

func (x *InvalidFallbackTypes) GetData12() uint64 {
	if x != nil {
		return x.xxx_hidden_Data12
	}
	return 0
}

func (x *InvalidFallbackTypes) GetData13() float64 {
	if x != nil {
		return x.xxx_hidden_Data13
	}
	return 0
}

func (x *InvalidFallbackTypes) GetData14() string {
	if x != nil {
		if x.xxx_hidden_Data14 != nil {
			return *x.xxx_hidden_Data14
		}
		return ""
	}
	return ""
}

func (x *InvalidFallbackTypes) GetData15() []byte {
	if x != nil {
		return x.xxx_hidden_Data15
	}
	return nil
}

func (x *InvalidFallbackTypes) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 16)
}

func (x *InvalidFallbackTypes) SetData1(v bool) {
	x.xxx_hidden_Data1 = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 16)
}

func (x *InvalidFallbackTypes) SetData2(v int32) {
	x.xxx_hidden_Data2 = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 16)
}

func (x *InvalidFallbackTypes) SetData3(v int32) {
	x.xxx_hidden_Data3 = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 16)
}

func (x *InvalidFallbackTypes) SetData4(v uint32) {
	x.xxx_hidden_Data4 = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 16)
}

func (x *InvalidFallbackTypes) SetData5(v int64) {
	x.xxx_hidden_Data5 = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 16)
}

func (x *InvalidFallbackTypes) SetData6(v int64) {
	x.xxx_hidden_Data6 = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 16)
}

func (x *InvalidFallbackTypes) SetData7(v uint64) {
	x.xxx_hidden_Data7 = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 16)
}

func (x *InvalidFallbackTypes) SetData8(v int32) {
	x.xxx_hidden_Data8 = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 16)
}

func (x *InvalidFallbackTypes) SetData9(v uint32) {
	x.xxx_hidden_Data9 = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 16)
}

func (x *InvalidFallbackTypes) SetData10(v float32) {
	x.xxx_hidden_Data10 = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 10, 16)
}

func (x *InvalidFallbackTypes) SetData11(v int64) {
	x.xxx_hidden_Data11 = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 11, 16)
}

func (x *InvalidFallbackTypes) SetData12(v uint64) {
	x.xxx_hidden_Data12 = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 12, 16)
}

func (x *InvalidFallbackTypes) SetData13(v float64) {
	x.xxx_hidden_Data13 = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 13, 16)
}

func (x *InvalidFallbackTypes) SetData14(v string) {
	x.xxx_hidden_Data14 = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 14, 16)
}

func (x *InvalidFallbackTypes) SetData15(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Data15 = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 15, 16)
}

func (x *InvalidFallbackTypes) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *InvalidFallbackTypes) HasData1() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *InvalidFallbackTypes) HasData2() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *InvalidFallbackTypes) HasData3() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *InvalidFallbackTypes) HasData4() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *InvalidFallbackTypes) HasData5() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *InvalidFallbackTypes) HasData6() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *InvalidFallbackTypes) HasData7() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *InvalidFallbackTypes) HasData8() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *InvalidFallbackTypes) HasData9() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *InvalidFallbackTypes) HasData10() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 10)
}

func (x *InvalidFallbackTypes) HasData11() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 11)
}

func (x *InvalidFallbackTypes) HasData12() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 12)
}

func (x *InvalidFallbackTypes) HasData13() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 13)
}

func (x *InvalidFallbackTypes) HasData14() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 14)
}

func (x *InvalidFallbackTypes) HasData15() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 15)
}

func (x *InvalidFallbackTypes) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *InvalidFallbackTypes) ClearData1() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Data1 = false
}

func (x *InvalidFallbackTypes) ClearData2() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Data2 = 0
}

func (x *InvalidFallbackTypes) ClearData3() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Data3 = 0
}

func (x *InvalidFallbackTypes) ClearData4() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Data4 = 0
}

func (x *InvalidFallbackTypes) ClearData5() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Data5 = 0
}

func (x *InvalidFallbackTypes) ClearData6() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_Data6 = 0
}

func (x *InvalidFallbackTypes) ClearData7() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_Data7 = 0
}

func (x *InvalidFallbackTypes) ClearData8() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_Data8 = 0
}

func (x *InvalidFallbackTypes) ClearData9() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_Data9 = 0
}

func (x *InvalidFallbackTypes) ClearData10() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 10)
	x.xxx_hidden_Data10 = 0
}

func (x *InvalidFallbackTypes) ClearData11() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 11)
	x.xxx_hidden_Data11 = 0
}

func (x *InvalidFallbackTypes) ClearData12() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 12)
	x.xxx_hidden_Data12 = 0
}

func (x *InvalidFallbackTypes) ClearData13() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 13)
	x.xxx_hidden_Data13 = 0
}

func (x *InvalidFallbackTypes) ClearData14() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 14)
	x.xxx_hidden_Data14 = nil
}

func (x *InvalidFallbackTypes) ClearData15() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 15)
	x.xxx_hidden_Data15 = nil
}

type InvalidFallbackTypes_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id     *string
	Data1  *bool
	Data2  *int32
	Data3  *int32
	Data4  *uint32
	Data5  *int64
	Data6  *int64
	Data7  *uint64
	Data8  *int32
	Data9  *uint32
	Data10 *float32
	Data11 *int64
	Data12 *uint64
	Data13 *float64
	Data14 *string
	Data15 []byte
}

func (b0 InvalidFallbackTypes_builder) Build() *InvalidFallbackTypes {
	m0 := &InvalidFallbackTypes{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 16)
		x.xxx_hidden_Id = b.Id
	}
	if b.Data1 != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 16)
		x.xxx_hidden_Data1 = *b.Data1
	}
	if b.Data2 != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 16)
		x.xxx_hidden_Data2 = *b.Data2
	}
	if b.Data3 != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 16)
		x.xxx_hidden_Data3 = *b.Data3
	}
	if b.Data4 != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 16)
		x.xxx_hidden_Data4 = *b.Data4
	}
	if b.Data5 != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 16)
		x.xxx_hidden_Data5 = *b.Data5
	}
	if b.Data6 != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 16)
		x.xxx_hidden_Data6 = *b.Data6
	}
	if b.Data7 != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 16)
		x.xxx_hidden_Data7 = *b.Data7
	}
	if b.Data8 != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 16)
		x.xxx_hidden_Data8 = *b.Data8
	}
	if b.Data9 != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 16)
		x.xxx_hidden_Data9 = *b.Data9
	}
	if b.Data10 != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 10, 16)
		x.xxx_hidden_Data10 = *b.Data10
	}
	if b.Data11 != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 11, 16)
		x.xxx_hidden_Data11 = *b.Data11
	}
	if b.Data12 != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 12, 16)
		x.xxx_hidden_Data12 = *b.Data12
	}
	if b.Data13 != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 13, 16)
		x.xxx_hidden_Data13 = *b.Data13
	}
	if b.Data14 != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 14, 16)
		x.xxx_hidden_Data14 = b.Data14
	}
	if b.Data15 != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 15, 16)
		x.xxx_hidden_Data15 = b.Data15
	}
	return m0
}

type InvalidMultipleDataSubjectIDsWithNesting_Nested struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Data1       *string                `protobuf:"bytes,2,opt,name=data1"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *InvalidMultipleDataSubjectIDsWithNesting_Nested) Reset() {
	*x = InvalidMultipleDataSubjectIDsWithNesting_Nested{}
	mi := &file_boostport_privacy_testing_invalid_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvalidMultipleDataSubjectIDsWithNesting_Nested) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidMultipleDataSubjectIDsWithNesting_Nested) ProtoMessage() {}

func (x *InvalidMultipleDataSubjectIDsWithNesting_Nested) ProtoReflect() protoreflect.Message {
	mi := &file_boostport_privacy_testing_invalid_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *InvalidMultipleDataSubjectIDsWithNesting_Nested) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *InvalidMultipleDataSubjectIDsWithNesting_Nested) GetData1() string {
	if x != nil {
		if x.xxx_hidden_Data1 != nil {
			return *x.xxx_hidden_Data1
		}
		return ""
	}
	return ""
}

func (x *InvalidMultipleDataSubjectIDsWithNesting_Nested) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *InvalidMultipleDataSubjectIDsWithNesting_Nested) SetData1(v string) {
	x.xxx_hidden_Data1 = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *InvalidMultipleDataSubjectIDsWithNesting_Nested) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *InvalidMultipleDataSubjectIDsWithNesting_Nested) HasData1() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *InvalidMultipleDataSubjectIDsWithNesting_Nested) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *InvalidMultipleDataSubjectIDsWithNesting_Nested) ClearData1() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Data1 = nil
}

type InvalidMultipleDataSubjectIDsWithNesting_Nested_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id    *string
	Data1 *string
}

func (b0 InvalidMultipleDataSubjectIDsWithNesting_Nested_builder) Build() *InvalidMultipleDataSubjectIDsWithNesting_Nested {
	m0 := &InvalidMultipleDataSubjectIDsWithNesting_Nested{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Id = b.Id
	}
	if b.Data1 != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Data1 = b.Data1
	}
	return m0
}

type InvalidMultipleDataSubjectIDsWithDeepNesting_Nested1 struct {
	state                  protoimpl.MessageState                                `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                                               `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Data1       *string                                               `protobuf:"bytes,2,opt,name=data1"`
	xxx_hidden_Data2       *InvalidMultipleDataSubjectIDsWithDeepNesting_Nested2 `protobuf:"bytes,3,opt,name=data2"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *InvalidMultipleDataSubjectIDsWithDeepNesting_Nested1) Reset() {
	*x = InvalidMultipleDataSubjectIDsWithDeepNesting_Nested1{}
	mi := &file_boostport_privacy_testing_invalid_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvalidMultipleDataSubjectIDsWithDeepNesting_Nested1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidMultipleDataSubjectIDsWithDeepNesting_Nested1) ProtoMessage() {}

func (x *InvalidMultipleDataSubjectIDsWithDeepNesting_Nested1) ProtoReflect() protoreflect.Message {
	mi := &file_boostport_privacy_testing_invalid_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *InvalidMultipleDataSubjectIDsWithDeepNesting_Nested1) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *InvalidMultipleDataSubjectIDsWithDeepNesting_Nested1) GetData1() string {
	if x != nil {
		if x.xxx_hidden_Data1 != nil {
			return *x.xxx_hidden_Data1
		}
		return ""
	}
	return ""
}

func (x *InvalidMultipleDataSubjectIDsWithDeepNesting_Nested1) GetData2() *InvalidMultipleDataSubjectIDsWithDeepNesting_Nested2 {
	if x != nil {
		return x.xxx_hidden_Data2
	}
	return nil
}

func (x *InvalidMultipleDataSubjectIDsWithDeepNesting_Nested1) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *InvalidMultipleDataSubjectIDsWithDeepNesting_Nested1) SetData1(v string) {
	x.xxx_hidden_Data1 = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 3)
}

func (x *InvalidMultipleDataSubjectIDsWithDeepNesting_Nested1) SetData2(v *InvalidMultipleDataSubjectIDsWithDeepNesting_Nested2) {
	x.xxx_hidden_Data2 = v
}

func (x *InvalidMultipleDataSubjectIDsWithDeepNesting_Nested1) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *InvalidMultipleDataSubjectIDsWithDeepNesting_Nested1) HasData1() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *InvalidMultipleDataSubjectIDsWithDeepNesting_Nested1) HasData2() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Data2 != nil
}

func (x *InvalidMultipleDataSubjectIDsWithDeepNesting_Nested1) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *InvalidMultipleDataSubjectIDsWithDeepNesting_Nested1) ClearData1() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Data1 = nil
}

func (x *InvalidMultipleDataSubjectIDsWithDeepNesting_Nested1) ClearData2() {
	x.xxx_hidden_Data2 = nil
}

type InvalidMultipleDataSubjectIDsWithDeepNesting_Nested1_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id    *string
	Data1 *string
	Data2 *InvalidMultipleDataSubjectIDsWithDeepNesting_Nested2
}

func (b0 InvalidMultipleDataSubjectIDsWithDeepNesting_Nested1_builder) Build() *InvalidMultipleDataSubjectIDsWithDeepNesting_Nested1 {
	m0 := &InvalidMultipleDataSubjectIDsWithDeepNesting_Nested1{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_Id = b.Id
	}
	if b.Data1 != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 3)
		x.xxx_hidden_Data1 = b.Data1
	}
	x.xxx_hidden_Data2 = b.Data2
	return m0
}

type InvalidMultipleDataSubjectIDsWithDeepNesting_Nested2 struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Data1       *string                `protobuf:"bytes,2,opt,name=data1"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *InvalidMultipleDataSubjectIDsWithDeepNesting_Nested2) Reset() {
	*x = InvalidMultipleDataSubjectIDsWithDeepNesting_Nested2{}
	mi := &file_boostport_privacy_testing_invalid_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvalidMultipleDataSubjectIDsWithDeepNesting_Nested2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidMultipleDataSubjectIDsWithDeepNesting_Nested2) ProtoMessage() {}

func (x *InvalidMultipleDataSubjectIDsWithDeepNesting_Nested2) ProtoReflect() protoreflect.Message {
	mi := &file_boostport_privacy_testing_invalid_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *InvalidMultipleDataSubjectIDsWithDeepNesting_Nested2) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *InvalidMultipleDataSubjectIDsWithDeepNesting_Nested2) GetData1() string {
	if x != nil {
		if x.xxx_hidden_Data1 != nil {
			return *x.xxx_hidden_Data1
		}
		return ""
	}
	return ""
}

func (x *InvalidMultipleDataSubjectIDsWithDeepNesting_Nested2) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *InvalidMultipleDataSubjectIDsWithDeepNesting_Nested2) SetData1(v string) {
	x.xxx_hidden_Data1 = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *InvalidMultipleDataSubjectIDsWithDeepNesting_Nested2) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *InvalidMultipleDataSubjectIDsWithDeepNesting_Nested2) HasData1() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *InvalidMultipleDataSubjectIDsWithDeepNesting_Nested2) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *InvalidMultipleDataSubjectIDsWithDeepNesting_Nested2) ClearData1() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Data1 = nil
}

type InvalidMultipleDataSubjectIDsWithDeepNesting_Nested2_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id    *string
	Data1 *string
}

func (b0 InvalidMultipleDataSubjectIDsWithDeepNesting_Nested2_builder) Build() *InvalidMultipleDataSubjectIDsWithDeepNesting_Nested2 {
	m0 := &InvalidMultipleDataSubjectIDsWithDeepNesting_Nested2{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Id = b.Id
	}
	if b.Data1 != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Data1 = b.Data1
	}
	return m0
}

type InvalidDataSubjectIDMessage_Nested struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Data1       *string                `protobuf:"bytes,2,opt,name=data1"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *InvalidDataSubjectIDMessage_Nested) Reset() {
	*x = InvalidDataSubjectIDMessage_Nested{}
	mi := &file_boostport_privacy_testing_invalid_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvalidDataSubjectIDMessage_Nested) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidDataSubjectIDMessage_Nested) ProtoMessage() {}

func (x *InvalidDataSubjectIDMessage_Nested) ProtoReflect() protoreflect.Message {
	mi := &file_boostport_privacy_testing_invalid_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *InvalidDataSubjectIDMessage_Nested) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *InvalidDataSubjectIDMessage_Nested) GetData1() string {
	if x != nil {
		if x.xxx_hidden_Data1 != nil {
			return *x.xxx_hidden_Data1
		}
		return ""
	}
	return ""
}

func (x *InvalidDataSubjectIDMessage_Nested) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *InvalidDataSubjectIDMessage_Nested) SetData1(v string) {
	x.xxx_hidden_Data1 = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *InvalidDataSubjectIDMessage_Nested) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *InvalidDataSubjectIDMessage_Nested) HasData1() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *InvalidDataSubjectIDMessage_Nested) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *InvalidDataSubjectIDMessage_Nested) ClearData1() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Data1 = nil
}

type InvalidDataSubjectIDMessage_Nested_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id    *string
	Data1 *string
}

func (b0 InvalidDataSubjectIDMessage_Nested_builder) Build() *InvalidDataSubjectIDMessage_Nested {
	m0 := &InvalidDataSubjectIDMessage_Nested{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Id = b.Id
	}
	if b.Data1 != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Data1 = b.Data1
	}
	return m0
}

type InvalidDataSubjectIDNestedInRepeated_Nested struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Data1       *string                `protobuf:"bytes,2,opt,name=data1"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *InvalidDataSubjectIDNestedInRepeated_Nested) Reset() {
	*x = InvalidDataSubjectIDNestedInRepeated_Nested{}
	mi := &file_boostport_privacy_testing_invalid_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvalidDataSubjectIDNestedInRepeated_Nested) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidDataSubjectIDNestedInRepeated_Nested) ProtoMessage() {}

func (x *InvalidDataSubjectIDNestedInRepeated_Nested) ProtoReflect() protoreflect.Message {
	mi := &file_boostport_privacy_testing_invalid_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *InvalidDataSubjectIDNestedInRepeated_Nested) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *InvalidDataSubjectIDNestedInRepeated_Nested) GetData1() string {
	if x != nil {
		if x.xxx_hidden_Data1 != nil {
			return *x.xxx_hidden_Data1
		}
		return ""
	}
	return ""
}

func (x *InvalidDataSubjectIDNestedInRepeated_Nested) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *InvalidDataSubjectIDNestedInRepeated_Nested) SetData1(v string) {
	x.xxx_hidden_Data1 = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *InvalidDataSubjectIDNestedInRepeated_Nested) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *InvalidDataSubjectIDNestedInRepeated_Nested) HasData1() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *InvalidDataSubjectIDNestedInRepeated_Nested) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *InvalidDataSubjectIDNestedInRepeated_Nested) ClearData1() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Data1 = nil
}

type InvalidDataSubjectIDNestedInRepeated_Nested_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id    *string
	Data1 *string
}

func (b0 InvalidDataSubjectIDNestedInRepeated_Nested_builder) Build() *InvalidDataSubjectIDNestedInRepeated_Nested {
	m0 := &InvalidDataSubjectIDNestedInRepeated_Nested{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Id = b.Id
	}
	if b.Data1 != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Data1 = b.Data1
	}
	return m0
}

type InvalidDataSubjectIDNestedInMap_Nested struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id          *string                `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Data1       *string                `protobuf:"bytes,2,opt,name=data1"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *InvalidDataSubjectIDNestedInMap_Nested) Reset() {
	*x = InvalidDataSubjectIDNestedInMap_Nested{}
	mi := &file_boostport_privacy_testing_invalid_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvalidDataSubjectIDNestedInMap_Nested) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidDataSubjectIDNestedInMap_Nested) ProtoMessage() {}

func (x *InvalidDataSubjectIDNestedInMap_Nested) ProtoReflect() protoreflect.Message {
	mi := &file_boostport_privacy_testing_invalid_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *InvalidDataSubjectIDNestedInMap_Nested) GetId() string {
	if x != nil {
		if x.xxx_hidden_Id != nil {
			return *x.xxx_hidden_Id
		}
		return ""
	}
	return ""
}

func (x *InvalidDataSubjectIDNestedInMap_Nested) GetData1() string {
	if x != nil {
		if x.xxx_hidden_Data1 != nil {
			return *x.xxx_hidden_Data1
		}
		return ""
	}
	return ""
}

func (x *InvalidDataSubjectIDNestedInMap_Nested) SetId(v string) {
	x.xxx_hidden_Id = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *InvalidDataSubjectIDNestedInMap_Nested) SetData1(v string) {
	x.xxx_hidden_Data1 = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *InvalidDataSubjectIDNestedInMap_Nested) HasId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *InvalidDataSubjectIDNestedInMap_Nested) HasData1() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *InvalidDataSubjectIDNestedInMap_Nested) ClearId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Id = nil
}

func (x *InvalidDataSubjectIDNestedInMap_Nested) ClearData1() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Data1 = nil
}

type InvalidDataSubjectIDNestedInMap_Nested_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id    *string
	Data1 *string
}

func (b0 InvalidDataSubjectIDNestedInMap_Nested_builder) Build() *InvalidDataSubjectIDNestedInMap_Nested {
	m0 := &InvalidDataSubjectIDNestedInMap_Nested{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Id != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Id = b.Id
	}
	if b.Data1 != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Data1 = b.Data1
	}
	return m0
}

type InvalidDataSubjectIDInExternalNestedInRepeated_Nested struct {
	state                  protoimpl.MessageState        `protogen:"opaque.v1"`
	xxx_hidden_Data1       *InvalidExternalDataSubjectID `protobuf:"bytes,1,opt,name=data1"`
	xxx_hidden_Data2       *string                       `protobuf:"bytes,2,opt,name=data2"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *InvalidDataSubjectIDInExternalNestedInRepeated_Nested) Reset() {
	*x = InvalidDataSubjectIDInExternalNestedInRepeated_Nested{}
	mi := &file_boostport_privacy_testing_invalid_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvalidDataSubjectIDInExternalNestedInRepeated_Nested) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidDataSubjectIDInExternalNestedInRepeated_Nested) ProtoMessage() {}

func (x *InvalidDataSubjectIDInExternalNestedInRepeated_Nested) ProtoReflect() protoreflect.Message {
	mi := &file_boostport_privacy_testing_invalid_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *InvalidDataSubjectIDInExternalNestedInRepeated_Nested) GetData1() *InvalidExternalDataSubjectID {
	if x != nil {
		return x.xxx_hidden_Data1
	}
	return nil
}

func (x *InvalidDataSubjectIDInExternalNestedInRepeated_Nested) GetData2() string {
	if x != nil {
		if x.xxx_hidden_Data2 != nil {
			return *x.xxx_hidden_Data2
		}
		return ""
	}
	return ""
}

func (x *InvalidDataSubjectIDInExternalNestedInRepeated_Nested) SetData1(v *InvalidExternalDataSubjectID) {
	x.xxx_hidden_Data1 = v
}

func (x *InvalidDataSubjectIDInExternalNestedInRepeated_Nested) SetData2(v string) {
	x.xxx_hidden_Data2 = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *InvalidDataSubjectIDInExternalNestedInRepeated_Nested) HasData1() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Data1 != nil
}

func (x *InvalidDataSubjectIDInExternalNestedInRepeated_Nested) HasData2() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *InvalidDataSubjectIDInExternalNestedInRepeated_Nested) ClearData1() {
	x.xxx_hidden_Data1 = nil
}

func (x *InvalidDataSubjectIDInExternalNestedInRepeated_Nested) ClearData2() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Data2 = nil
}

type InvalidDataSubjectIDInExternalNestedInRepeated_Nested_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Data1 *InvalidExternalDataSubjectID
	Data2 *string
}

func (b0 InvalidDataSubjectIDInExternalNestedInRepeated_Nested_builder) Build() *InvalidDataSubjectIDInExternalNestedInRepeated_Nested {
	m0 := &InvalidDataSubjectIDInExternalNestedInRepeated_Nested{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Data1 = b.Data1
	if b.Data2 != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Data2 = b.Data2
	}
	return m0
}

type InvalidDataSubjectIDInExternalNestedInMap_Nested struct {
	state                  protoimpl.MessageState        `protogen:"opaque.v1"`
	xxx_hidden_Data1       *InvalidExternalDataSubjectID `protobuf:"bytes,1,opt,name=data1"`
	xxx_hidden_Data2       *string                       `protobuf:"bytes,2,opt,name=data2"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *InvalidDataSubjectIDInExternalNestedInMap_Nested) Reset() {
	*x = InvalidDataSubjectIDInExternalNestedInMap_Nested{}
	mi := &file_boostport_privacy_testing_invalid_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvalidDataSubjectIDInExternalNestedInMap_Nested) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidDataSubjectIDInExternalNestedInMap_Nested) ProtoMessage() {}

func (x *InvalidDataSubjectIDInExternalNestedInMap_Nested) ProtoReflect() protoreflect.Message {
	mi := &file_boostport_privacy_testing_invalid_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *InvalidDataSubjectIDInExternalNestedInMap_Nested) GetData1() *InvalidExternalDataSubjectID {
	if x != nil {
		return x.xxx_hidden_Data1
	}
	return nil
}

func (x *InvalidDataSubjectIDInExternalNestedInMap_Nested) GetData2() string {
	if x != nil {
		if x.xxx_hidden_Data2 != nil {
			return *x.xxx_hidden_Data2
		}
		return ""
	}
	return ""
}

func (x *InvalidDataSubjectIDInExternalNestedInMap_Nested) SetData1(v *InvalidExternalDataSubjectID) {
	x.xxx_hidden_Data1 = v
}

func (x *InvalidDataSubjectIDInExternalNestedInMap_Nested) SetData2(v string) {
	x.xxx_hidden_Data2 = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *InvalidDataSubjectIDInExternalNestedInMap_Nested) HasData1() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Data1 != nil
}

func (x *InvalidDataSubjectIDInExternalNestedInMap_Nested) HasData2() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *InvalidDataSubjectIDInExternalNestedInMap_Nested) ClearData1() {
	x.xxx_hidden_Data1 = nil
}

func (x *InvalidDataSubjectIDInExternalNestedInMap_Nested) ClearData2() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Data2 = nil
}

type InvalidDataSubjectIDInExternalNestedInMap_Nested_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Data1 *InvalidExternalDataSubjectID
	Data2 *string
}

func (b0 InvalidDataSubjectIDInExternalNestedInMap_Nested_builder) Build() *InvalidDataSubjectIDInExternalNestedInMap_Nested {
	m0 := &InvalidDataSubjectIDInExternalNestedInMap_Nested{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Data1 = b.Data1
	if b.Data2 != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Data2 = b.Data2
	}
	return m0
}

var File_boostport_privacy_testing_invalid_proto protoreflect.FileDescriptor

const file_boostport_privacy_testing_invalid_proto_rawDesc = "" +
	"\n" +
	"'boostport/privacy/testing/invalid.proto\x12\x19boostport.privacy.testing\x1a\x1fboostport/privacy/privacy.proto\"\x86\x01\n" +
	"\x1dInvalidMultipleDataSubjectIDs\x12\x15\n" +
	"\x02id\x18\x01 \x01(\tB\x05\x82}\x02\n" +
	"\x00R\x02id\x12\x1b\n" +
	"\x05data1\x18\x02 \x01(\tB\x05\x82}\x02\n" +
	"\x00R\x05data1\x12\x1b\n" +
	"\x05data2\x18\x03 \x01(\tB\x05\x82}\x02\x12\x00R\x05data2\x12\x14\n" +
	"\x05data3\x18\x04 \x01(\tR\x05data3\"\xf7\x01\n" +
	"(InvalidMultipleDataSubjectIDsWithNesting\x12\x15\n" +
	"\x02id\x18\x01 \x01(\tB\x05\x82}\x02\n" +
	"\x00R\x02id\x12\x1b\n" +
	"\x05data1\x18\x02 \x01(\tB\x05\x82}\x02\x12\x00R\x05data1\x12`\n" +
	"\x05data2\x18\x03 \x01(\v2J.boostport.privacy.testing.InvalidMultipleDataSubjectIDsWithNesting.NestedR\x05data2\x1a5\n" +
	"\x06Nested\x12\x15\n" +
	"\x02id\x18\x01 \x01(\tB\x05\x82}\x02\n" +
	"\x00R\x02id\x12\x14\n" +
	"\x05data1\x18\x02 \x01(\tR\x05data1\"\x9a\x03\n" +
	",InvalidMultipleDataSubjectIDsWithDeepNesting\x12\x15\n" +
	"\x02id\x18\x01 \x01(\tB\x05\x82}\x02\n" +
	"\x00R\x02id\x12\x1b\n" +
	"\x05data1\x18\x02 \x01(\tB\x05\x82}\x02\x12\x00R\x05data1\x12e\n" +
	"\x05data2\x18\x03 \x01(\v2O.boostport.privacy.testing.InvalidMultipleDataSubjectIDsWithDeepNesting.Nested1R\x05data2\x1a\x96\x01\n" +
	"\aNested1\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05data1\x18\x02 \x01(\tR\x05data1\x12e\n" +
	"\x05data2\x18\x03 \x01(\v2O.boostport.privacy.testing.InvalidMultipleDataSubjectIDsWithDeepNesting.Nested2R\x05data2\x1a6\n" +
	"\aNested2\x12\x15\n" +
	"\x02id\x18\x01 \x01(\tB\x05\x82}\x02\n" +
	"\x00R\x02id\x12\x14\n" +
	"\x05data1\x18\x02 \x01(\tR\x05data1\"\x9e\x01\n" +
	"'InvalidMultipleDataSubjectIDsWithPrefix\x12\x1c\n" +
	"\x02id\x18\x01 \x01(\tB\f\x82}\t\n" +
	"\a\n" +
	"\x05test-R\x02id\x12\"\n" +
	"\x05data1\x18\x02 \x01(\tB\f\x82}\t\n" +
	"\a\n" +
	"\x05test-R\x05data1\x12\x1b\n" +
	"\x05data2\x18\x03 \x01(\tB\x05\x82}\x02\x12\x00R\x05data2\x12\x14\n" +
	"\x05data3\x18\x04 \x01(\tR\x05data3\"R\n" +
	"\x1cInvalidDataSubjectIDRepeated\x12\x15\n" +
	"\x02id\x18\x01 \x03(\tB\x05\x82}\x02\n" +
	"\x00R\x02id\x12\x1b\n" +
	"\x05data1\x18\x02 \x01(\tB\x05\x82}\x02\x12\x00R\x05data1\"\xc0\x01\n" +
	"\x17InvalidDataSubjectIDMap\x12Q\n" +
	"\x02id\x18\x01 \x03(\v2:.boostport.privacy.testing.InvalidDataSubjectIDMap.IdEntryB\x05\x82}\x02\n" +
	"\x00R\x02id\x12\x1b\n" +
	"\x05data1\x18\x02 \x01(\tB\x05\x82}\x02\x12\x00R\x05data1\x1a5\n" +
	"\aIdEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xc0\x01\n" +
	"\x1bInvalidDataSubjectIDMessage\x12T\n" +
	"\x02id\x18\x01 \x01(\v2=.boostport.privacy.testing.InvalidDataSubjectIDMessage.NestedB\x05\x82}\x02\n" +
	"\x00R\x02id\x12\x1b\n" +
	"\x05data1\x18\x02 \x01(\tB\x05\x82}\x02\x12\x00R\x05data1\x1a.\n" +
	"\x06Nested\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05data1\x18\x02 \x01(\tR\x05data1\"\xd2\x01\n" +
	"$InvalidDataSubjectIDNestedInRepeated\x12V\n" +
	"\x02id\x18\x01 \x03(\v2F.boostport.privacy.testing.InvalidDataSubjectIDNestedInRepeated.NestedR\x02id\x12\x1b\n" +
	"\x05data1\x18\x02 \x01(\tB\x05\x82}\x02\x12\x00R\x05data1\x1a5\n" +
	"\x06Nested\x12\x15\n" +
	"\x02id\x18\x01 \x01(\tB\x05\x82}\x02\n" +
	"\x00R\x02id\x12\x14\n" +
	"\x05data1\x18\x02 \x01(\tR\x05data1\"\xc3\x02\n" +
	"\x1fInvalidDataSubjectIDNestedInMap\x12R\n" +
	"\x02id\x18\x01 \x03(\v2B.boostport.privacy.testing.InvalidDataSubjectIDNestedInMap.IdEntryR\x02id\x12\x1b\n" +
	"\x05data1\x18\x02 \x01(\tB\x05\x82}\x02\x12\x00R\x05data1\x1a5\n" +
	"\x06Nested\x12\x15\n" +
	"\x02id\x18\x01 \x01(\tB\x05\x82}\x02\n" +
	"\x00R\x02id\x12\x14\n" +
	"\x05data1\x18\x02 \x01(\tR\x05data1\x1ax\n" +
	"\aIdEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12W\n" +
	"\x05value\x18\x02 \x01(\v2A.boostport.privacy.testing.InvalidDataSubjectIDNestedInMap.NestedR\x05value:\x028\x01\"K\n" +
	"\x1cInvalidExternalDataSubjectID\x12\x15\n" +
	"\x02id\x18\x01 \x01(\tB\x05\x82}\x02\n" +
	"\x00R\x02id\x12\x14\n" +
	"\x05data1\x18\x02 \x01(\tR\x05data1\"\x9e\x02\n" +
	".InvalidDataSubjectIDInExternalNestedInRepeated\x12`\n" +
	"\x02id\x18\x01 \x03(\v2P.boostport.privacy.testing.InvalidDataSubjectIDInExternalNestedInRepeated.NestedR\x02id\x12\x1b\n" +
	"\x05data1\x18\x02 \x01(\tB\x05\x82}\x02\x12\x00R\x05data1\x1am\n" +
	"\x06Nested\x12M\n" +
	"\x05data1\x18\x01 \x01(\v27.boostport.privacy.testing.InvalidExternalDataSubjectIDR\x05data1\x12\x14\n" +
	"\x05data2\x18\x02 \x01(\tR\x05data2\"\x9a\x03\n" +
	")InvalidDataSubjectIDInExternalNestedInMap\x12\\\n" +
	"\x02id\x18\x01 \x03(\v2L.boostport.privacy.testing.InvalidDataSubjectIDInExternalNestedInMap.IdEntryR\x02id\x12\x1b\n" +
	"\x05data1\x18\x02 \x01(\tB\x05\x82}\x02\x12\x00R\x05data1\x1am\n" +
	"\x06Nested\x12M\n" +
	"\x05data1\x18\x01 \x01(\v27.boostport.privacy.testing.InvalidExternalDataSubjectIDR\x05data1\x12\x14\n" +
	"\x05data2\x18\x02 \x01(\tR\x05data2\x1a\x82\x01\n" +
	"\aIdEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12a\n" +
	"\x05value\x18\x02 \x01(\v2K.boostport.privacy.testing.InvalidDataSubjectIDInExternalNestedInMap.NestedR\x05value:\x028\x01\"I\n" +
	"\x1aInvalidNoPersonalDataField\x12\x15\n" +
	"\x02id\x18\x01 \x01(\tB\x05\x82}\x02\n" +
	"\x00R\x02id\x12\x14\n" +
	"\x05data1\x18\x02 \x01(\tR\x05data1\"\xc2\x04\n" +
	"\x14InvalidFallbackTypes\x12\x15\n" +
	"\x02id\x18\x01 \x01(\tB\x05\x82}\x02\n" +
	"\x00R\x02id\x12!\n" +
	"\x05data1\x18\x02 \x01(\bB\v\x82}\b\x12\x06r\x04testR\x05data1\x12!\n" +
	"\x05data2\x18\x03 \x01(\x05B\v\x82}\b\x12\x06r\x04testR\x05data2\x12!\n" +
	"\x05data3\x18\x04 \x01(\x11B\v\x82}\b\x12\x06r\x04testR\x05data3\x12!\n" +
	"\x05data4\x18\x05 \x01(\rB\v\x82}\b\x12\x06r\x04testR\x05data4\x12!\n" +
	"\x05data5\x18\x06 \x01(\x03B\v\x82}\b\x12\x06r\x04testR\x05data5\x12!\n" +
	"\x05data6\x18\a \x01(\x12B\v\x82}\b\x12\x06r\x04testR\x05data6\x12!\n" +
	"\x05data7\x18\b \x01(\x04B\v\x82}\b\x12\x06r\x04testR\x05data7\x12!\n" +
	"\x05data8\x18\t \x01(\x0fB\v\x82}\b\x12\x06r\x04testR\x05data8\x12!\n" +
	"\x05data9\x18\n" +
	" \x01(\aB\v\x82}\b\x12\x06r\x04testR\x05data9\x12#\n" +
	"\x06data10\x18\v \x01(\x02B\v\x82}\b\x12\x06r\x04testR\x06data10\x12#\n" +
	"\x06data11\x18\f \x01(\x10B\v\x82}\b\x12\x06r\x04testR\x06data11\x12#\n" +
	"\x06data12\x18\r \x01(\x06B\v\x82}\b\x12\x06r\x04testR\x06data12\x12#\n" +
	"\x06data13\x18\x0e \x01(\x01B\v\x82}\b\x12\x06r\x04testR\x06data13\x12\x1f\n" +
	"\x06data14\x18\x0f \x01(\tB\a\x82}\x04\x12\x02\x18\x01R\x06data14\x12#\n" +
	"\x06data15\x18\x10 \x01(\fB\v\x82}\b\x12\x06r\x04testR\x06data15B\x83\x02\n" +
	"\x1dcom.boostport.privacy.testingB\fInvalidProtoP\x01ZNgithub.com/Boostport/protoprivacy/internal/generated/boostport/privacy/testing\xa2\x02\x03BPT\xaa\x02\x19Boostport.Privacy.Testing\xca\x02\x19Boostport\\Privacy\\Testing\xe2\x02%Boostport\\Privacy\\Testing\\GPBMetadata\xea\x02\x1bBoostport::Privacy::Testingb\beditionsp\xe8\a"

var file_boostport_privacy_testing_invalid_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_boostport_privacy_testing_invalid_proto_goTypes = []any{
	(*InvalidMultipleDataSubjectIDs)(nil),                        // 0: boostport.privacy.testing.InvalidMultipleDataSubjectIDs
	(*InvalidMultipleDataSubjectIDsWithNesting)(nil),             // 1: boostport.privacy.testing.InvalidMultipleDataSubjectIDsWithNesting
	(*InvalidMultipleDataSubjectIDsWithDeepNesting)(nil),         // 2: boostport.privacy.testing.InvalidMultipleDataSubjectIDsWithDeepNesting
	(*InvalidMultipleDataSubjectIDsWithPrefix)(nil),              // 3: boostport.privacy.testing.InvalidMultipleDataSubjectIDsWithPrefix
	(*InvalidDataSubjectIDRepeated)(nil),                         // 4: boostport.privacy.testing.InvalidDataSubjectIDRepeated
	(*InvalidDataSubjectIDMap)(nil),                              // 5: boostport.privacy.testing.InvalidDataSubjectIDMap
	(*InvalidDataSubjectIDMessage)(nil),                          // 6: boostport.privacy.testing.InvalidDataSubjectIDMessage
	(*InvalidDataSubjectIDNestedInRepeated)(nil),                 // 7: boostport.privacy.testing.InvalidDataSubjectIDNestedInRepeated
	(*InvalidDataSubjectIDNestedInMap)(nil),                      // 8: boostport.privacy.testing.InvalidDataSubjectIDNestedInMap
	(*InvalidExternalDataSubjectID)(nil),                         // 9: boostport.privacy.testing.InvalidExternalDataSubjectID
	(*InvalidDataSubjectIDInExternalNestedInRepeated)(nil),       // 10: boostport.privacy.testing.InvalidDataSubjectIDInExternalNestedInRepeated
	(*InvalidDataSubjectIDInExternalNestedInMap)(nil),            // 11: boostport.privacy.testing.InvalidDataSubjectIDInExternalNestedInMap
	(*InvalidNoPersonalDataField)(nil),                           // 12: boostport.privacy.testing.InvalidNoPersonalDataField
	(*InvalidFallbackTypes)(nil),                                 // 13: boostport.privacy.testing.InvalidFallbackTypes
	(*InvalidMultipleDataSubjectIDsWithNesting_Nested)(nil),      // 14: boostport.privacy.testing.InvalidMultipleDataSubjectIDsWithNesting.Nested
	(*InvalidMultipleDataSubjectIDsWithDeepNesting_Nested1)(nil), // 15: boostport.privacy.testing.InvalidMultipleDataSubjectIDsWithDeepNesting.Nested1
	(*InvalidMultipleDataSubjectIDsWithDeepNesting_Nested2)(nil), // 16: boostport.privacy.testing.InvalidMultipleDataSubjectIDsWithDeepNesting.Nested2
	nil, // 17: boostport.privacy.testing.InvalidDataSubjectIDMap.IdEntry
	(*InvalidDataSubjectIDMessage_Nested)(nil),          // 18: boostport.privacy.testing.InvalidDataSubjectIDMessage.Nested
	(*InvalidDataSubjectIDNestedInRepeated_Nested)(nil), // 19: boostport.privacy.testing.InvalidDataSubjectIDNestedInRepeated.Nested
	(*InvalidDataSubjectIDNestedInMap_Nested)(nil),      // 20: boostport.privacy.testing.InvalidDataSubjectIDNestedInMap.Nested
	nil, // 21: boostport.privacy.testing.InvalidDataSubjectIDNestedInMap.IdEntry
	(*InvalidDataSubjectIDInExternalNestedInRepeated_Nested)(nil), // 22: boostport.privacy.testing.InvalidDataSubjectIDInExternalNestedInRepeated.Nested
	(*InvalidDataSubjectIDInExternalNestedInMap_Nested)(nil),      // 23: boostport.privacy.testing.InvalidDataSubjectIDInExternalNestedInMap.Nested
	nil, // 24: boostport.privacy.testing.InvalidDataSubjectIDInExternalNestedInMap.IdEntry
}
var file_boostport_privacy_testing_invalid_proto_depIdxs = []int32{
	14, // 0: boostport.privacy.testing.InvalidMultipleDataSubjectIDsWithNesting.data2:type_name -> boostport.privacy.testing.InvalidMultipleDataSubjectIDsWithNesting.Nested
	15, // 1: boostport.privacy.testing.InvalidMultipleDataSubjectIDsWithDeepNesting.data2:type_name -> boostport.privacy.testing.InvalidMultipleDataSubjectIDsWithDeepNesting.Nested1
	17, // 2: boostport.privacy.testing.InvalidDataSubjectIDMap.id:type_name -> boostport.privacy.testing.InvalidDataSubjectIDMap.IdEntry
	18, // 3: boostport.privacy.testing.InvalidDataSubjectIDMessage.id:type_name -> boostport.privacy.testing.InvalidDataSubjectIDMessage.Nested
	19, // 4: boostport.privacy.testing.InvalidDataSubjectIDNestedInRepeated.id:type_name -> boostport.privacy.testing.InvalidDataSubjectIDNestedInRepeated.Nested
	21, // 5: boostport.privacy.testing.InvalidDataSubjectIDNestedInMap.id:type_name -> boostport.privacy.testing.InvalidDataSubjectIDNestedInMap.IdEntry
	22, // 6: boostport.privacy.testing.InvalidDataSubjectIDInExternalNestedInRepeated.id:type_name -> boostport.privacy.testing.InvalidDataSubjectIDInExternalNestedInRepeated.Nested
	24, // 7: boostport.privacy.testing.InvalidDataSubjectIDInExternalNestedInMap.id:type_name -> boostport.privacy.testing.InvalidDataSubjectIDInExternalNestedInMap.IdEntry
	16, // 8: boostport.privacy.testing.InvalidMultipleDataSubjectIDsWithDeepNesting.Nested1.data2:type_name -> boostport.privacy.testing.InvalidMultipleDataSubjectIDsWithDeepNesting.Nested2
	20, // 9: boostport.privacy.testing.InvalidDataSubjectIDNestedInMap.IdEntry.value:type_name -> boostport.privacy.testing.InvalidDataSubjectIDNestedInMap.Nested
	9,  // 10: boostport.privacy.testing.InvalidDataSubjectIDInExternalNestedInRepeated.Nested.data1:type_name -> boostport.privacy.testing.InvalidExternalDataSubjectID
	9,  // 11: boostport.privacy.testing.InvalidDataSubjectIDInExternalNestedInMap.Nested.data1:type_name -> boostport.privacy.testing.InvalidExternalDataSubjectID
	23, // 12: boostport.privacy.testing.InvalidDataSubjectIDInExternalNestedInMap.IdEntry.value:type_name -> boostport.privacy.testing.InvalidDataSubjectIDInExternalNestedInMap.Nested
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_boostport_privacy_testing_invalid_proto_init() }
func file_boostport_privacy_testing_invalid_proto_init() {
	if File_boostport_privacy_testing_invalid_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_boostport_privacy_testing_invalid_proto_rawDesc), len(file_boostport_privacy_testing_invalid_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_boostport_privacy_testing_invalid_proto_goTypes,
		DependencyIndexes: file_boostport_privacy_testing_invalid_proto_depIdxs,
		MessageInfos:      file_boostport_privacy_testing_invalid_proto_msgTypes,
	}.Build()
	File_boostport_privacy_testing_invalid_proto = out.File
	file_boostport_privacy_testing_invalid_proto_goTypes = nil
	file_boostport_privacy_testing_invalid_proto_depIdxs = nil
}
